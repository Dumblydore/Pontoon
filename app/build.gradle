apply plugin: 'com.android.application'

def applyAnalytics = (project.findProperty('enableAnalytics') ?: "false").equalsIgnoreCase("true")

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
if (applyAnalytics) {
    apply plugin: 'io.fabric'
    apply plugin: 'com.google.firebase.firebase-perf'
}

def major = 0
def minor = 9
def patch = (project.findProperty('buildNumber') ?: "0").toInteger()

Properties localProperties = new Properties()
localProperties.load(project.rootProject.file("local.properties").newDataInputStream())

android {
    signingConfigs {
        Release {
            keyAlias localProperties.getProperty("release.keyAlias", "")
            keyPassword localProperties.getProperty("release.keyPassword", "")
            storeFile file(localProperties.getProperty("release.storeFile", "~/"))
            storePassword localProperties.getProperty("release.storePassword", "")
        }
    }
    compileSdkVersion 30
    defaultConfig {
        applicationId "me.mauricee.pontoon"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode((major * 100) + (minor * 100) + patch)
        versionName "$major.$minor.$patch"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resValue 'string', 'default_user', "\"${localProperties.getProperty("pontoon.username", "")}\""
        resValue 'string', 'default_pass', "\"${localProperties.getProperty("pontoon.password", "")}\""
        resValue 'string', 'cast_id', "\"${localProperties.getProperty("pontoon.castId", "")}\""
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles fileTree('proguard').asList().toArray()
            resValue 'string', 'app_name', '"Pontoon"'
            resValue 'string', 'default_user', '""'
            resValue 'string', 'default_pass', '""'
            signingConfig signingConfigs.Release
            pseudoLocalesEnabled true
        }
        debug {
            resValue 'string', 'app_name', '"Pontoon Debug"'
            applicationIdSuffix ".debug"
            versionNameSuffix '-debug'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //  Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //  Google
    implementation "androidx.core:core-ktx:1.3.1"
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.preference:preference:1.1.1"

    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.core:core:1.3.1"
    implementation "androidx.media:media:1.1.0"
    implementation "androidx.palette:palette:$google_support_version"
    implementation "androidx.mediarouter:mediarouter:1.1.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation "com.google.android.material:material:$material_components_version"

    //    Google Play
    implementation('com.google.firebase:firebase-core:17.5.0', {
        // protobuf-lite that firebase-config and Tink depends on.
        exclude group: 'com.google.protobuf', module: 'protobuf-javalite'
        exclude group: 'com.google.protobuf', module: 'protobuf-lite'
    })
    implementation('com.google.firebase:firebase-crash:16.2.1', {
        // protobuf-lite that firebase-config and Tink depends on.
        exclude group: 'com.google.protobuf', module: 'protobuf-javalite'
        exclude group: 'com.google.protobuf', module: 'protobuf-lite'
    })
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1', {
        // protobuf-lite that firebase-config and Tink depends on.
        exclude group: 'com.google.protobuf', module: 'protobuf-javalite'
        exclude group: 'com.google.protobuf', module: 'protobuf-lite'
    })
    implementation('com.google.firebase:firebase-perf:19.0.8', {
        // protobuf-lite that firebase-config and Tink depends on.
        exclude group: 'com.google.protobuf', module: 'protobuf-javalite'
        exclude group: 'com.google.protobuf', module: 'protobuf-lite'
    })
    implementation 'com.google.android.gms:play-services-cast-framework:19.0.0'

    //  UI
    implementation 'com.ncapdevi:frag-nav:2.4.0'
    implementation "com.mikepenz:aboutlibraries:6.2.0-rc01"
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rx_binding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-design-kotlin:$rx_binding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:$rx_binding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:$rx_binding_version"

    //  RX
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.0.0'

    //  Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    implementation("com.github.bumptech.glide:recyclerview-integration:$glide_version") {
        transitive = false
    }
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //  Utils
    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.1'
    implementation('org.aaronhe:threetenbp-gson-adapter:1.0.2') {
        transitive = false
    }
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    // ExoPlayer
    implementation "com.google.android.exoplayer:exoplayer-core:$exo_player_version"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exo_player_version"
    implementation "com.google.android.exoplayer:extension-okhttp:$exo_player_version"
    implementation "com.google.android.exoplayer:extension-cast:$exo_player_version"
    implementation "com.google.android.exoplayer:exoplayer-hls:$exo_player_version"

    //  Architecture Components
    implementation "androidx.room:room-runtime:$arch_components_version"
    implementation "androidx.room:room-rxjava2:$arch_components_version"
    implementation "androidx.paging:paging-runtime:$arch_components_pagination_version"
    implementation "androidx.paging:paging-rxjava2:$arch_components_pagination_version"

    //   Networking
    implementation "com.isupatches:wisefy:3.0.1"
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.nytimes.android:store3:3.1.1'
    implementation 'com.vanniktech:rxpermission:0.7.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'

    //  Tests
    testImplementation 'junit:junit:4.12'
    testImplementation "io.mockk:mockk:1.9.3"
//    testImplementation "android.arch.persistence.room:testing:$arch_components_version"

    //  Android tests
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //  Processors
    kapt "androidx.room:room-compiler:$arch_components_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
}

if (applyAnalytics) {
    apply plugin: 'com.google.gms.google-services'
}

if (project.hasProperty('kapt')) {
    // Reference for 'kapt' DSL: https://kotlinlang.org/docs/reference/kapt.html#java-compiler-options
    kapt {
        // we expect this closure to run over a org.jetbrains.kotlin.gradle.plugin.KaptExtension
        javacOptions {
            option("-source", "8")
            option("-target", "8")
        }
    }
}
