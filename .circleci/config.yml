version: 2
defaults: &defaults
  working_directory: '~/repo'
  docker:
    - image: circleci/android:api-28-alpha
  environment:
    _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'
    TERM: dumb

jobs:
  build:
    <<: *defaults
    steps:
      - run:
          name: Install AWS CLI
          command: sudo apt-get -y -qq install awscli
      - run:
          name: Get keystore from S3
          command: |
            mkdir configs
            aws configure set s3.signature_version s3v4
            aws s3 cp s3://mauricee.me-server/keystore/pontoon/Pontoon.jks ./configs --region us-west-2
            aws s3 cp s3://mauricee.me-server/keystore/pontoon/fabric.properties ./configs --region us-west-2
            aws s3 cp s3://mauricee.me-server/keystore/pontoon/release/google-services.json ./configs --region us-west-2
            aws s3 cp s3://mauricee.me-server/keystore/pontoon/nightly/google-services.json ./configs --region us-west-2
      - run:
          name: prepare properties.local
          command: |
            touch local.properties
            echo "signing.keyAlias=${SIGNING_RELEASE_KEY_ALIAS}" >> local.properties
            echo "signing.keyPassword=${SIGNING_RELEASE_KEY_PASSWORD}" >> local.properties
            echo "signing.storeFile=/home/circleci/repo/keystore/Pontoon.jks" >> local.properties
            echo "signing.storePassword=${SIGNING_RELEASE_STORE_PASSWORD}" >> local.properties
      - save_cache:
          key: configs-{{ arch }}-{{ .Branch }}-{{ .BuildNum }}
          paths:
            - ./configs
            - local.properties
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - configs-{{ arch }}-{{ .Branch }}-
            - configs-{{ arch }}-
            - configs-
      - run:
          name: validate root directory
          command: ls ./configs
      - run:
          name: move config files
          command: |
            mkdir ./keystore
            mv ./configs/Pontoon.jks ./keystore
            mv ./configs/fabric.properties ./app
            mv ./configs/google-services.json ./app
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew && chmod +x ./gradle/wrapper/gradle-wrapper.jar
      - run:
          name: test
          command: ./gradlew clean test
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - save_cache:
          key: configs-{{ arch }}-{{ .Branch }}-{{ .BuildNum }}
          paths:
            - ./configs
            - local.properties
  deploy_nightly:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - configs-{{ arch }}-{{ .Branch }}-
            - configs-{{ arch }}-
            - configs-
      - run:
          name: validate root directory
          command: ls ./configs
      - run:
          name: move config files
          command: |
            mkdir ./keystore
            mv ./configs/Pontoon.jks ./keystore
            mv ./configs/fabric.properties ./app
            mv ./configs/google-services.json ./app
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew && chmod +x ./gradle/wrapper/gradle-wrapper.jar
      - run:
          name: Build and Deploy Release
          command: ./gradlew clean test assembleRelease crashlyticsUploadDistributionNightly -PisCi=true -PbuildNumber=${CIRCLE_BUILD_NUM}
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - save_cache:
          key: configs-{{ arch }}-{{ .Branch }}-{{ .BuildNum }}
          paths:
            - ./configs
            - local.properties
      - store_artifacts:
          path: app/build/outputs/apk/release/app-release.apk
      - store_artifacts:
          path: app/build/outputs/mapping/release/usage.txt
      - store_artifacts:
          path: app/build/outputs/mapping/release/mappings.tx
  deploy_release:
      <<: *defaults
      steps:
        - checkout
        - restore_cache:
            keys:
              - jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
              - configs-{{ arch }}-{{ .Branch }}-
              - configs-{{ arch }}-
              - configs-
        - run:
            name: move config files
            command: |
              mkdir ./keystore
              mv ./configs/Pontoon.jks ./keystore
              mv ./configs/fabric.properties ./app
              mv ./configs/google-services.json ./app
        - run:
            name: chmod permissions
            command: chmod +x ./gradlew && chmod +x ./gradle/wrapper/gradle-wrapper.jar
        - run:
            name: Build and Deploy Release
            command: ./gradlew clean test assembleRelease crashlyticsUploadDistributionRelease -PisCi=true -PbuildNumber=${CIRCLE_BUILD_NUM}
        - save_cache:
            paths:
              - ~/.gradle
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
        - save_cache:
            key: configs-{{ arch }}-{{ .Branch }}-{{ .BuildNum }}
            paths:
              - ./configs
              - local.properties
        - store_artifacts:
            path: app/build/outputs/apk/release/app-release.apk
        - store_artifacts:
            path: app/build/outputs/mapping/release/usage.txt
        - store_artifacts:
            path: app/build/outputs/mapping/release/mappings.txt
workflows:
  version: 2
  commits:
    jobs:
      - build:
        filters:
          - ignore: master
      - test
        require:
          - build
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: master
            tags:
              ignore: /^v.*/
    jobs:
      - build
      - deploy_nightly
  release:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            tags:
              only: /^release-.*/
            branches:
              ignore: /^v.*/
    jobs:
      - build
      - deploy_release
experimental:
    notify:
      branches:
        only:
          - /feature-.*/
          - /bugfix-.*/