version: 2
jobs:
  build:
      docker:
        - image: circleci/android:api-28-alpha
      working_directory: ~/repo
      steps:
        - run:
            name: Install AWS CLI
            command: sudo apt-get -y -qq install awscli
        - run:
            name: Get keystore from S3
            command: |
              mkdir keystore
              aws configure set s3.signature_version s3v4
              aws s3 cp s3://mauricee.me-server/keystore/pontoon/Pontoon.jks ./keystore --region us-west-2
              aws s3 cp s3://mauricee.me-server/keystore/pontoon/fabric.properties ./app --region us-west-2
              aws s3 cp s3://mauricee.me-server/keystore/pontoon/debug/google-services.json ./app --region us-west-2
        - run:
            name: prepare properties.local
            command: |
              touch local.properties
              echo "release.keyAlias=${SIGNING_RELEASE_KEY_ALIAS}" >> local.properties
              echo "release.keyPassword=${SIGNING_RELEASE_KEY_PASSWORD}" >> local.properties
              echo "release.storeFile=/home/circleci/repo/keystore/Pontoon.jks" >> local.properties
              echo "release.storePassword=${SIGNING_RELEASE_STORE_PASSWORD}" >> local.properties
        - persist_to_workspace:
              root: workspace
              paths:
                - repo
  build_beta:
    docker:
      - image: circleci/android:api-28-alpha
    working_directory: ~/repo
    environment:
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'
      TERM: dumb
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - run:
          name: chmod permissions
          command: chmod +x ./gradlew && chmod +x ./gradle/wrapper/gradle-wrapper.jar

      - run:
          name: Build and Deploy Release
          command: ./gradlew clean assembleRelease crashlyticsUploadDistributionRelease -P buildNumber=${CIRCLE_BUILD_NUM}

      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: app/build/outputs/apk/release/app-release.apk
      - store_artifacts:
          path: app/build/outputs/mapping/release/usage.txt
      - store_artifacts:
          path: app/build/outputs/mapping/release/mappings.tx
  build_release:
      docker:
        - image: circleci/android:api-28-alpha
      working_directory: ~/repo
      environment:
        _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
        GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'
        TERM: dumb
      steps:
        - checkout
        - restore_cache:
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
        - run:
            name: chmod permissions
            command: chmod +x ./gradlew && chmod +x ./gradle/wrapper/gradle-wrapper.jar
        - run:
            name: Build and Deploy Release
            command: ./gradlew clean assembleRelease crashlyticsUploadDistributionRelease -P buildNumber=${CIRCLE_BUILD_NUM}
        - save_cache:
            paths:
              - ~/.gradle
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
        - save_cache:
            paths:
              - ~/.gradle
            key: v1-dependencies-{{ checksum "build.gradle" }}
        - store_artifacts:
            path: app/build/outputs/apk/release/app-release.apk
        - store_artifacts:
            path: app/build/outputs/mapping/release/usage.txt
        - store_artifacts:
            path: app/build/outputs/mapping/release/mappings.txt
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - build_beta